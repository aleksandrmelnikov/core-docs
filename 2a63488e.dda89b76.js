(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{101:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var a=t(1),o=t(6),r=(t(0),t(126)),i={title:"Configuration files",sidebar_label:"Configuration files"},s={id:"deployment/configuration/files",title:"Configuration files",description:"There are two files generated after running `opctl init --provider <provider>`:",source:"@site/docs/deployment/configuration/files.md",permalink:"/docs/deployment/configuration/files",editUrl:"https://github.com/onepanelio/core-docs/tree/master/docs/deployment/configuration/files.md",sidebar_label:"Configuration files",sidebar:"deployment",previous:{title:"CLI Quickstart",permalink:"/docs/deployment/configuration/cli"},next:{title:"TLS certificates",permalink:"/docs/deployment/configuration/tls"}},c=[{value:"Single-node deployment <code>params.yaml</code>",id:"single-node-deployment-paramsyaml",children:[]},{value:"Cloud deployment <code>params.yaml</code>",id:"cloud-deployment-paramsyaml",children:[]}],l={rightToc:c};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"There are two files generated after running ",Object(r.b)("inlineCode",{parentName:"p"},"opctl init --provider <provider>"),":"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"params.yaml")," - contains the fields that need to be updated to configure your deployment."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"config.yaml")," - contains components that are going to be included in the deployment. This file ",Object(r.b)("strong",{parentName:"li"},"should not")," be updated unless you plan on adding custom Kustomize components to your deployment.")),Object(r.b)("p",null,"For further information on populating the ",Object(r.b)("inlineCode",{parentName:"p"},"params.yaml")," file, refer to the sections below. This information is also available inside the generated ",Object(r.b)("inlineCode",{parentName:"p"},"params.yaml")," template."),Object(r.b)("h2",{id:"single-node-deployment-paramsyaml"},"Single-node deployment ",Object(r.b)("inlineCode",{parentName:"h2"},"params.yaml")),Object(r.b)("div",{className:"admonition admonition-important"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("div",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"The template below is automatically generated by following the instructions under ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../overview#installing-on-a-single-node-cluster"}),"Install on single-node cluster")," for your provider."))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Onepanel\n# Description: Onepanel application information\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\napplication:\n  # First namespace that will be created in Onepanel, more can be added later\n  defaultNamespace: default\n  # Domain name or IP where Onepanel is hosted\n  # Use an IP address if running local, use `minikube ip` or `multipass list` to get this IP\n  # In the cloud, use a first-level or multi-level subdomain like app.example.com or app.sub.example.com\n  host: <ip-or-fqdn>\n  local:\n    # GRPC port for API\n    apiGRPCPort: 32001\n    # HTTP port for API\n    apiHTTPPort: 32000\n    # HTTP port for UI\n    uiHTTPPort: 32002\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Artifact repository\n# Description: S3 compatible object storage for storing files across Onepanel\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nartifactRepository:\n  # S3 access key\n  accessKey: <access-key>\n  # Name of bucket, example: my-bucket\n  bucket: <bucket-name>\n  # Endpoint for S3 compatible storage\n  # Supported provider endpoints:\n  #   AWS: s3.amazonaws.com\n  #   GCS: storage.googleapis.com\n  #   Minio: my-minio-endpoint.default:9000\n  endpoint: s3.amazonaws.com\n  # Change to true if endpoint does NOT support HTTPS\n  insecure: false\n  # Bucket region\n  region: us-west-2\n  # S3 secret key\n  secretKey: <secret-key>\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Database\n# Description: Database connection information\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\ndatabase:\n  # Name of database\n  # If using an external production database, use the name of that database.\n  # For in-cluster test database, use any name you like.\n  databaseName: onepanel\n  # Do not change, only `postgres` driver is supported at this time.\n  driverName: postgres\n  # Database host - use `postgres` for in-cluster test database\n  host: <database-ip-or-hostname>\n  # Database password\n  # If using an external production database, use the password for that database.\n  # For in-cluster test database, use any password you like.\n  password: <password>\n  # Database port\n  port: 5432\n  # Database username\n  # If using an external production database, use the username for that database.\n  # For in-cluster test database, use any username you like.\n  username: <username>\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Application and system logging\n# Description: ElasticSearch, Fluentd and Kibana (EFK) logging\n# CLI flag: --enable-efk-logging\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlogging:\n  # ElasticSearch container image\n  image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0\n  # Volume size for EFK logging\n  volumeStorage: 100Gi\n")),Object(r.b)("h2",{id:"cloud-deployment-paramsyaml"},"Cloud deployment ",Object(r.b)("inlineCode",{parentName:"h2"},"params.yaml")),Object(r.b)("div",{className:"admonition admonition-important"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("div",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"The template below is automatically generated by following the instructions under ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../overview#installing-on-public-cloud"}),"Install on public cloud")," for your provider."))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Onepanel\n# Description: Onepanel application information\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\napplication:\n  cloud:\n    # GRPC port for API\n    apiGRPCPort: 8887\n    # Path of API relative to host\n    apiPath: /api\n    # HTTP or HTTPS - Do not change, determined by `opctl init --enable-https`\n    # CLI flag: --enable-https\n    insecure: false\n    # Path of UI relative to host\n    uiPath: /\n  # First namespace that will be created in Onepanel, more can be added later\n  defaultNamespace: default\n  # Domain name or IP where Onepanel is hosted\n  # Use an IP address if running local, use `minikube ip` or `multipass list` to get this IP\n  # In the cloud, use a first-level or multi-level subdomain like app.example.com or app.sub.example.com\n  host: <ip-or-fqdn>\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Artifact repository\n# Description: S3 compatible object storage for storing files across Onepanel\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nartifactRepository:\n  # S3 access key\n  accessKey: <access-key>\n  # Name of bucket, example: my-bucket\n  bucket: <bucket-name>\n  # Endpoint for S3 compatible storage\n  # Supported provider endpoints:\n  #   AWS: s3.amazonaws.com\n  #   GCS: storage.googleapis.com\n  #   Minio: my-minio-endpoint.default:9000\n  endpoint: s3.amazonaws.com\n  # Change to true if endpoint does NOT support HTTPS\n  insecure: false\n  # Bucket region\n  region: us-west-2\n  # S3 secret key\n  secretKey: <secret-key>\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: cert-manager\n# Description: automatically creates and renews TLS certificates using Let's Encrypt\n# Docs: https://onepanelio.github.io/core-docs/docs/deployment/configuration/tls\n# CLI flag: --enable-cert-manager\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\ncertManager:\n  # - - - - - - - - - - - - Select Only One DNS Provider - - - - - - - - - - - - -\n\n  # DNS Provider: AzureDNS\n  # Docs: https://onepanelio.github.io/core-docs/docs/deployment/configuration/tls#azuredns\n  # CLI flag: --dns-provider=azuredns\n  azuredns:\n    clientId: <service-provider-app-id>\n    spPassword: <service-provider-password>\n    subscriptionId: <azure-subscription-id>\n    tenantId: <tenant-id>\n    resourceGroupName: <resource-group-name>\n    hostedZoneName: <hosted-zone-name>\n    environment: AzurePublicCloud\n  # DNS Provider: Google CloudDNS\n  # Docs: https://onepanelio.github.io/core-docs/docs/deployment/configuration/tls#google-clouddns\n  # CLI flag: --dns-provider=clouddns\n  clouddns:\n    projectId: <project-id>\n    serviceAccountKey: <key.json-file-data>\n  # DNS Provider: Cloudflare\n  # Docs: https://onepanelio.github.io/core-docs/docs/deployment/configuration/tls#cloudflare\n  # CLI flag: --dns-provider=cloudflare\n  cloudflare:\n    apiToken: <api-token>\n    email: <email>\n  # DNS Provider: Amazon Route53\n  # Docs: https://onepanelio.github.io/core-docs/docs/deployment/configuration/tls#route53\n  # CLI flag: --dns-provider=route53\n  route53:\n    region: <aws-region>\n    access_key: <aws-access-key>\n    secret_key: <aws-secret-key>\n\n  # - - - - - - - - - - - - - End DNS Provider Selection - - - - - - - - - - - - - -\n  \n  # Enter a wildcard domain name\n  # Examples: *.example.com or *.subdomain.example.com\n  commonName: <wildcard-fqdn>\n  # Enter certificate admin email\n  # Example: admin@example.com\n  email: <cert-admin-email>\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Database\n# Description: Database connection information\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\ndatabase:\n  # Name of database\n  # If using an external production database, use the name of that database.\n  # For in-cluster test database, use any name you like.\n  databaseName: onepanel\n  # Do not change, only `postgres` driver is supported at this time.\n  driverName: postgres\n  # Database host - use `postgres` for in-cluster test database\n  host: <database-ip-or-hostname>\n  # Database password\n  # If using an external production database, use the password for that database.\n  # For in-cluster test database, use any password you like.\n  password: <password>\n  # Database port\n  port: 5432\n  # Database username\n  # If using an external production database, use the username for that database.\n  # For in-cluster test database, use any username you like.\n  username: <username>\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Application and system logging\n# Description: ElasticSearch, Fluentd and Kibana (EFK) logging\n# CLI flag: --enable-efk-logging\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlogging:\n  # ElasticSearch container image\n  image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0\n  # Volume size for EFK logging\n  volumeStorage: 100Gi\n")))}p.isMDXComponent=!0},126:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return b}));var a=t(0),o=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),p=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s({},n,{},e)),t},d=function(e){var n=p(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},u=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(t),u=a,b=d["".concat(i,".").concat(u)]||d[u]||m[u]||r;return t?o.a.createElement(b,s({ref:n},l,{components:t})):o.a.createElement(b,s({ref:n},l))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=t[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);