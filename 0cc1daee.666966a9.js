(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{104:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(2),r=(a(0),a(151));const o={title:"Workflow Templates",sidebar_label:"Workflow Templates",description:"Creating Workflow Templates for training models, ETL tasks and more on Onepanel"},s={id:"reference/workflows/templates",title:"Workflow Templates",description:"Creating Workflow Templates for training models, ETL tasks and more on Onepanel",source:"@site/docs/reference/workflows/templates.md",permalink:"/docs/reference/workflows/templates",editUrl:"https://github.com/onepanelio/core-docs/tree/master/docs/reference/workflows/templates.md",sidebar_label:"Workflow Templates",sidebar:"reference",previous:{title:"Terminating a Workspace",permalink:"/docs/reference/workspaces/delete"}},l=[{value:"Getting started with Workflow Templates",id:"getting-started-with-workflow-templates",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Artifacts",id:"artifacts",children:[]}],i={rightToc:l};function p({components:e,...t}){return Object(r.b)("wrapper",Object(n.a)({},i,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"See our ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/onepanelio/templates/tree/master/workflows"}),"Templates repository")," for a list of ready to use Workflow Templates."))),Object(r.b)("h2",{id:"getting-started-with-workflow-templates"},"Getting started with Workflow Templates"),Object(r.b)("p",null,"You can define reusable templates for Workflows. All Workflow Templates are defined as Directed Acyclic Graphs (DAG), here's an example of how a DAG template is defined:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),'# The template to use as entrypoint\nentrypoint: main\ntemplates:\n- name: main            \n  dag:                      # Indicates that this is a DAG template\n    tasks:\n    - name: A               # First task to execute\n      template: echo        # The template to use for first task in DAG\n      arguments:            # Arguments to pass into the "echo" template\n        parameters:\n        - name: message\n          value: A\n    - name: B\n      dependencies: [A]\n      template: echo\n      arguments:\n        parameters:\n        - name: message\n          value: B\n    - name: C\n      dependencies: [A]\n      template: echo\n      arguments:\n        parameters:\n        - name: message\n          value: C\n    - name: D\n      dependencies: [B, C]\n      template: echo\n      arguments:\n        parameters:\n        - name: message\n          value: D\n- name: echo                # Definition of "echo" template used by the nodes in DAG\n  inputs:                   # Name of inputs \n    parameters:\n    - name: message\n  container:\n    image: alpine:3.7\n    command: [echo, "{{inputs.parameters.message}}"]\n')),Object(r.b)("h2",{id:"parameters"},"Parameters"),Object(r.b)("p",null,"You can define and use parameters in your Workflow Templates. These parameters are displayed in the Workflow creation form (or are made available via CLI) and can be referenced in the template like so:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"'{{workflow.parameters.<parameter-name>}}'\n")),Object(r.b)("p",null,"The syntax for parameter definitions are as follows:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"arguments:\n  parameters:\n  - name: storage-class # Name, only alphanumeric characters and `-` allowed (required)\n    value: ssd  # Default value (required)\n    displayName: Storage class\n    type: select.select # How to render this parameter in Workflow creation form in Web UI\n    options:  # type of select.select and input.radio allow you to set options\n    - name: SSD\n      value: ssd\n")),Object(r.b)("p",null,"If a parameter is defined, ",Object(r.b)("inlineCode",{parentName:"p"},"name")," and ",Object(r.b)("inlineCode",{parentName:"p"},"value")," are required."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"name")," is the name of the parameters, only alphanumeric characters and ",Object(r.b)("inlineCode",{parentName:"li"},"-")," allowed"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"value")," is the default value for the parameter"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"displayName")," is the text that is displayed to the user"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"type")," indicates how the parameter is rendered in the Workflow creation form in the Web UI. Possible values are:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"input.text")," renders a textbox"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"input.number")," renders a textbox that only accepts numbers"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"input.radio")," renders radio buttons"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"select.select")," renders a dropdown"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"textarea.textarea")," renders a textarea"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"options")," define options if ",Object(r.b)("inlineCode",{parentName:"li"},"type")," is ",Object(r.b)("inlineCode",{parentName:"li"},"select.select")," or ",Object(r.b)("inlineCode",{parentName:"li"},"input.radio"))),Object(r.b)("p",null,"Example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:"{3-11,22}","{3-11,22}":!0}),"arguments:\n  parameters:\n  - name: message-text\n    value: my-message-2 # default value\n    displayName: Message text\n    type: select.select\n    options:\n    - name: my-message-1\n      value: my-message-1\n    - name: my-message-2\n      value: my-message-2\nentrypoint: main\ntemplates:\n- name: main\n  dag:\n    tasks:\n    - name: A\n      template: echo\n      arguments:\n        parameters:\n        - name: message\n          value: '{{workflow.parameters.message-text}}'\n")),Object(r.b)("h2",{id:"artifacts"},"Artifacts"),Object(r.b)("p",null,"When running Workflows, it is very common to have steps that generate or consume artifacts. Often, the output artifacts of one task may be used as input artifacts to a subsequent task."),Object(r.b)("p",null,"Example below shows how you can download or upload artifacts from or to different object storage locations:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"entrypoint: main\narguments:\n  # Workflow parameters which will be set by user via Web UI, SDK or API\n  parameters:\n  - name: model-path\n    value: my-data/output\ntemplates:\n- name: main\n  dag:\n    tasks:\n    - name: input-output\n      template: input-output\n- name: input-output\n  container:\n    args:\n    - |\n      printenv \\\n      && ls /tmp/input \\\n        && mkdir -p /tmp/output \\\n        && echo \"hello\" > /tmp/output/message.txt \\\n        && sleep 15\n    command:\n    - bash\n    - -c\n    image: bash\n  inputs:\n    artifacts:\n    # Download files from S3 prefix random/input into local folder /tmp/input/\n    # # This downloads from the default S3 artifact repository for this namespace\n    - name: input\n      path: /tmp/input/\n      s3:\n        key: my-data/input\n  outputs:\n    artifacts:\n    # Upload files from local /tmp/output folder to default object storage location that is configured for this namespace\n    # This is set to artifacts/{{workflow.namespace}}/{{workflow.name}}/{{pod.name}} by default\n    - name: output-one\n      path: /tmp/output\n    # Upload files from local /tmp/output folder to S3 prefix my-data/output\n    # This uploads to the default S3 artifact repository for this namespace\n    - name: output-two\n      path: /tmp/output\n      s3:\n        # Reference to the Workflow parameter that was set by user\n        key: '{{workflow.parameters.model-path}}'\n    # Upload files from local /tmp/output folder to the S3 prefix my-data/output in bucket defined below\n    - name: output-three\n      path: /tmp/output\n      s3:\n        key: '{{workflow.parameters.model-path}}'\n        endpoint: storage.googleapis.com\n        bucket: my-bucket-name\n        accessKeySecret:\n          name: my-s3-credentials\n          key: accessKey\n        secretKeySecret:\n          name: my-s3-credentials\n          key: secretKey\n\n")),Object(r.b)("p",null,"Artifacts can be packaged as Tarballs and gzipped by specifying an archive strategy, using the ",Object(r.b)("inlineCode",{parentName:"p"},"archive")," field:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"...\n  outputs:\n    artifacts:\n    # Upload files from local /tmp/output folder to default object storage location that is configured for this namespace\n    # This is set to artifacts/{{workflow.namespace}}/{{workflow.name}}/{{pod.name}} by default\n    - name: output-one\n      path: /tmp/output\n      # Tar and gzip contents of /tmp/output folder and upload to the namespace configured artifact repository\n      archive:\n        tar: {}\n...\n")))}p.isMDXComponent=!0},151:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return b}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),m=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=m(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(a),d=n,b=c["".concat(s,".").concat(d)]||c[d]||u[d]||o;return a?r.a.createElement(b,l(l({ref:t},p),{},{components:a})):r.a.createElement(b,l({ref:t},p))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var p=2;p<o;p++)s[p]=a[p];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);