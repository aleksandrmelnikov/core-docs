(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{115:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return r})),a.d(n,"metadata",(function(){return s})),a.d(n,"rightToc",(function(){return l})),a.d(n,"default",(function(){return p}));var t=a(2),o=a(6),i=(a(0),a(150)),r={title:"Configuration files",sidebar_label:"Configuration files"},s={id:"deployment/configuration/files",title:"Configuration files",description:"There are two files generated after running opctl init --provider :",source:"@site/docs/deployment/configuration/files.md",permalink:"/docs/deployment/configuration/files",editUrl:"https://github.com/onepanelio/core-docs/tree/master/docs/deployment/configuration/files.md",sidebar_label:"Configuration files",sidebar:"deployment",previous:{title:"CLI overview",permalink:"/docs/deployment/configuration/cli"},next:{title:"TLS certificates",permalink:"/docs/deployment/configuration/tls"}},l=[{value:"Content of configuration file <code>params.yaml</code>",id:"content-of-configuration-file-paramsyaml",children:[]},{value:"Sections",id:"sections",children:[{value:"application",id:"application",children:[]},{value:"artifactRepository",id:"artifactrepository",children:[]},{value:"certManager",id:"certmanager",children:[]},{value:"database",id:"database",children:[]}]}],c={rightToc:l};function p(e){var n=e.components,a=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},c,a,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"There are two files generated after running ",Object(i.b)("inlineCode",{parentName:"p"},"opctl init --provider <provider>"),":"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"params.yaml")," - contains the fields that need to be updated to configure your deployment."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"config.yaml")," - contains components that are going to be included in the deployment. This file ",Object(i.b)("strong",{parentName:"li"},"should not")," be updated unless you plan on adding custom Kustomize components to your deployment.")),Object(i.b)("p",null,"For further information on populating the ",Object(i.b)("inlineCode",{parentName:"p"},"params.yaml")," file, refer to the sections below. This information is also available inside the generated ",Object(i.b)("inlineCode",{parentName:"p"},"params.yaml")," template."),Object(i.b)("h2",{id:"content-of-configuration-file-paramsyaml"},"Content of configuration file ",Object(i.b)("inlineCode",{parentName:"h2"},"params.yaml")),Object(i.b)("div",{className:"admonition admonition-important alert alert--info"},Object(i.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(t.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(t.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(t.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(i.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The template below is automatically generated by following the instructions under ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/deployment/overview#installing-on-public-cloud"}),"Install on public cloud")," for your provider."))),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml"}),"# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Onepanel\n# Description: Onepanel application information\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\napplication:\n  cloud:\n    # GRPC port for API\n    apiGRPCPort: 8887\n    # Path of API relative to host\n    apiPath: /api\n    # HTTP or HTTPS - Do not change, determined by `opctl init --enable-https`\n    # CLI flag: --enable-https\n    insecure: false\n    # Path of UI relative to host\n    uiPath: /\n  # First namespace that will be created in Onepanel, more can be added later\n  defaultNamespace: default\n  # Domain or IP where Onepanel is hosted\n  # Use an IP address if running local, use `minikube ip` or `multipass list` to get this IP\n  # In the cloud, use a first-level or multi-level subdomain like example.com or sub.example.com\n  domain: <ip-or-domain>\n  # The Fully Qualified Domain (FQDN) where Onepanel will be hosted.\n  # Use the same IP address as `domain` above if running local, use `minikube ip` or `multipass list` to get this IP\n  # In the cloud, if `domain` above is set to example.com or sub.example.com, then your FQDN could be: app.example.com or app.sub.example.com respectively\n  fqdn: <ip-or-fqdn>\n  # Node pool or group label keys and values used for AutoScaling and for NodeSelectors\n  # The provider will set these label key and values on your nodes automatically\n  # These can also be customized depending on your provider\n  nodePool:\n    label: <node-pool-label>\n    # Add more by following the format:\n    # - name: <name>\n    #   value: <value>\n    # The first option will be used as default.\n    options:\n    - name: 'Use friendly name 1'\n      value: <value-1>\n    - name: 'Use friendly name 2'\n      value: <value-2>\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Artifact repository\n# Description: S3 compatible object storage for storing files across Onepanel\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nartifactRepository:\n  s3:\n    # S3 access key\n    accessKey: <access-key>\n    # Name of bucket, example: my-bucket\n    bucket: <bucket-name>\n    # Endpoint for S3 compatible storage\n    # Supported provider endpoints:\n    #   AWS: s3.amazonaws.com\n    #   GCS: storage.googleapis.com\n    #   Minio: my-minio-endpoint.default:9000\n    endpoint: s3.amazonaws.com\n    # Change to true if endpoint does NOT support HTTPS\n    insecure: false\n    # Bucket region\n    region: us-west-2\n    # S3 secret key\n    secretKey: <secret-key>\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: cert-manager\n# Description: automatically creates and renews TLS certificates using Let's Encrypt\n# Docs: https://onepanelio.github.io/core-docs/docs/deployment/configuration/tls\n# CLI flag: --enable-cert-manager\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\ncertManager:\n  # - - - - - - - - - - - - Select Only One DNS Provider - - - - - - - - - - - - -\n\n  # DNS Provider: AzureDNS\n  # Docs: https://onepanelio.github.io/core-docs/docs/deployment/configuration/tls#azuredns\n  # CLI flag: --dns-provider=azuredns\n  azuredns:\n    clientId: <service-provider-app-id>\n    spPassword: <service-provider-password>\n    subscriptionId: <azure-subscription-id>\n    tenantId: <tenant-id>\n    resourceGroupName: <resource-group-name>\n    hostedZoneName: <hosted-zone-name>\n    environment: AzurePublicCloud\n  # DNS Provider: Google CloudDNS\n  # Docs: https://onepanelio.github.io/core-docs/docs/deployment/configuration/tls#google-clouddns\n  # CLI flag: --dns-provider=clouddns\n  clouddns:\n    projectId: <project-id>\n    serviceAccountKey: <key.json-file-data>\n  # DNS Provider: Cloudflare\n  # Docs: https://onepanelio.github.io/core-docs/docs/deployment/configuration/tls#cloudflare\n  # CLI flag: --dns-provider=cloudflare\n  cloudflare:\n    apiToken: <api-token>\n    email: <email>\n  # DNS Provider: Amazon Route53\n  # Docs: https://onepanelio.github.io/core-docs/docs/deployment/configuration/tls#route53\n  # CLI flag: --dns-provider=route53\n  route53:\n    region: <aws-region>\n    access_key: <aws-access-key>\n    secret_key: <aws-secret-key>\n\n  # - - - - - - - - - - - - - End DNS Provider Selection - - - - - - - - - - - - - -\n  \n  # Enter certificate admin email\n  # Example: admin@example.com\n  email: <cert-admin-email>\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Database\n# Description: Database connection information\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\ndatabase:\n  # Name of database\n  # If using an external production database, use the name of that database.\n  # For in-cluster test database, use any name you like.\n  databaseName: onepanel\n  # Do not change, only `postgres` driver is supported at this time.\n  driverName: postgres\n  # Database host - use `postgres` for in-cluster test database\n  host: <database-ip-or-hostname>\n  # Database password\n  # If using an external production database, use the password for that database.\n  # For in-cluster test database, use any password you like.\n  password: <password>\n  # Database port\n  port: 5432\n  # Database username\n  # If using an external production database, use the username for that database.\n  # For in-cluster test database, use any username you like.\n  username: <username>\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Component: Application and system logging\n# Description: ElasticSearch, Fluentd and Kibana (EFK) logging\n# CLI flag: --enable-efk-logging\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlogging:\n  # ElasticSearch container image\n  image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0\n  # Volume size for EFK logging\n  volumeStorage: 100Gi\n")),Object(i.b)("h2",{id:"sections"},"Sections"),Object(i.b)("p",null,"What follows is a more detailed description of each section of the ",Object(i.b)("inlineCode",{parentName:"p"},"params.yaml")," file."),Object(i.b)("h3",{id:"application"},"application"),Object(i.b)("p",null,"This is where you set the basic application configuration. "),Object(i.b)("p",null,"Below are the sections you will need to adjust."),Object(i.b)("h4",{id:"cloud"},"cloud"),Object(i.b)("p",null,"Everything under this section is generated and should not be manually changed.  "),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"insecure")," field is set to ",Object(i.b)("inlineCode",{parentName:"p"},"true")," by default and will be set to ",Object(i.b)("inlineCode",{parentName:"p"},"false")," if you add the ",Object(i.b)("inlineCode",{parentName:"p"},"--enable-https")," when running ",Object(i.b)("inlineCode",{parentName:"p"},"opctl init"),"."),Object(i.b)("h4",{id:"defaultnamespace"},"defaultNamespace"),Object(i.b)("p",null,"This is the first ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/getting-started/concepts/namespaces"}),"Namespace")," you want created. This could be a project name or a team name. It is set to ",Object(i.b)("inlineCode",{parentName:"p"},"default")," by default but we recommend you use something more meaningful."),Object(i.b)("h4",{id:"domain"},"domain"),Object(i.b)("p",null,"This is the domain for your Onepanel resources. Some resources like Workspaces create subdomains of this domain so they can be accessed by a browser. This can be a top level domain like ",Object(i.b)("inlineCode",{parentName:"p"},"example.com")," or a subdomain ",Object(i.b)("inlineCode",{parentName:"p"},"sub.example.com"),"."),Object(i.b)("h4",{id:"fqdn"},"fqdn"),Object(i.b)("p",null,"This is where Onepanel UI and API will be deployed. This should be a subdomain of the ",Object(i.b)("inlineCode",{parentName:"p"},"domain")," field mentioned above. Example: ",Object(i.b)("inlineCode",{parentName:"p"},"app.example.com")," or ",Object(i.b)("inlineCode",{parentName:"p"},"app.sub.example.com"),"."),Object(i.b)("h4",{id:"nodepool"},"nodePool"),Object(i.b)("p",null,"Depending on your provider, these are either called node pools or node groups. They are labels on Kubernetes nodes that Onepanel uses for auto scaling nodes on demand."),Object(i.b)("p",null,"A common ",Object(i.b)("inlineCode",{parentName:"p"},"label")," to identify these is ",Object(i.b)("inlineCode",{parentName:"p"},"beta.kubernetes.io/instance-type")," which most cloud providers automatically set. The value of this label is usually set to the instance type of the cloud provider."),Object(i.b)("p",null,"You can see all labels on your nodes by running:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"kubectl get nodes --show-labels\n")),Object(i.b)("p",null,"Note that this lists many different labels, so you can pick and choose any label key/value that is unique to that node."),Object(i.b)("p",null,"For example after running the ",Object(i.b)("inlineCode",{parentName:"p"},"kubectl")," command above, you may get the following list of labels:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash",metastring:"{3}","{3}":!0}),"agentpool=nodepool1,\nbeta.kubernetes.io/arch=amd64,\nbeta.kubernetes.io/instance-type=Standard_D2s_v3,\nbeta.kubernetes.io/os=linux,\nfailure-domain.beta.kubernetes.io/region=eastus,\n")),Object(i.b)("p",null,"You can then use the label key/value pairs as follows:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml",metastring:"{2,4-5}","{2,4-5}":!0}),"nodePool:\n  label: beta.kubernetes.io/instance-type  # node label key\n  options:\n    - name: 'CPU: 2, RAM: 8GB'      # friendly name for instance\n      value: 'Standard_D2s_v3'      # node label value\n    - name: 'CPU: 4, RAM: 16GB'\n      value: Standard_D4s_v3\n    - name: 'GPU: 1xK80, CPU: 6, RAM: 56GB'\n      value: Standard_NC6\n")),Object(i.b)("h3",{id:"artifactrepository"},"artifactRepository"),Object(i.b)("p",null,"This section allows you to setup the default object storage for your Workflow and Workspace artifacts, which includes Workflow log storage. Onepanel currently supports any S3 compatible artifact repository such as AWS, GCS and Minio. Support for additional object storages is coming soon."),Object(i.b)("p",null,"Here's an example AWS S3 configuration:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml"}),"artifactRepository:\n  s3:\n    accessKey: AKIAJSIE27KKMHXI3BJQ\n    bucket: pipelines.example.com\n    endpoint: s3.amazonaws.com\n    region: us-west-2\n    secretKey: 5bEYu26084qjSFyclM/f2pz4gviSfoOg+mFwBH39\n")),Object(i.b)("div",{className:"admonition admonition-important alert alert--info"},Object(i.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(t.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(t.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(t.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(i.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Onepanel Workflows will automatically upload or download artifacts from ",Object(i.b)("inlineCode",{parentName:"p"},"artifacts/{{workflow.namespace}}/{{workflow.name}}/{{pod.name}}"),". See ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/reference/workflows/templates#artifacts"}),"Workflow artifacts")," for more information."))),Object(i.b)("h3",{id:"certmanager"},"certManager"),Object(i.b)("p",null,"If you have run ",Object(i.b)("inlineCode",{parentName:"p"},"opctl init")," with ",Object(i.b)("inlineCode",{parentName:"p"},"--enable-https"),", ",Object(i.b)("inlineCode",{parentName:"p"},"--enable-cert-manager")," and ",Object(i.b)("inlineCode",{parentName:"p"},"--dns-provider")," flags set, you need to configure your respective DNS provider here so that Onepanel can create and renew your TLS certificates for you."),Object(i.b)("p",null,"See ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/deployment/configuration/tls"}),"TLS certificates")," for more information about configuring this section."),Object(i.b)("h3",{id:"database"},"database"),Object(i.b)("p",null,"This is the database settings section. "),Object(i.b)("p",null,"For a test cluster, you can set the database ",Object(i.b)("inlineCode",{parentName:"p"},"host")," to ",Object(i.b)("inlineCode",{parentName:"p"},"postgres")," and use any ",Object(i.b)("inlineCode",{parentName:"p"},"username")," or ",Object(i.b)("inlineCode",{parentName:"p"},"password"),". This database will be automatically created in the cluster with the information you entered."),Object(i.b)("p",null,"Note that you cannot change the username/password for the test database once it's created."),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-yaml"}),"database:\n  databaseName: onepanel\n  driverName: postgres\n  host: postgres\n  password: mypassword\n  port: 5432\n  # Database username\n  # If using an external production database, use the username for that database.\n  # For in-cluster test database, use any username you like.\n  username: onepanel\n")),Object(i.b)("div",{className:"admonition admonition-important alert alert--info"},Object(i.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(t.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(t.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(t.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(i.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"For a production environment, use a managed database service and set the configuration accordingly."))))}p.isMDXComponent=!0},150:function(e,n,a){"use strict";a.d(n,"a",(function(){return d})),a.d(n,"b",(function(){return m}));var t=a(0),o=a.n(t);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=o.a.createContext({}),p=function(e){var n=o.a.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},d=function(e){var n=p(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},u=o.a.forwardRef((function(e,n){var a=e.components,t=e.mdxType,i=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(a),u=t,m=d["".concat(r,".").concat(u)]||d[u]||b[u]||i;return a?o.a.createElement(m,s(s({ref:n},c),{},{components:a})):o.a.createElement(m,s({ref:n},c))}));function m(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=a.length,r=new Array(i);r[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:t,r[1]=s;for(var c=2;c<i;c++)r[c]=a[c];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);